{"version":3,"file":"js/project-ac77617db7f09c006d02.js","mappings":"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","sources":["webpack://portfolio/./portfolio/static/js/components/axiosFactory.js","webpack://portfolio/./portfolio/static/js/components/default.js","webpack://portfolio/./portfolio/static/js/components/projectForm.js","webpack://portfolio/./portfolio/static/js/app/project.js"],"sourcesContent":["import axios from \"axios\";\n\n// const axios_session = axios.create({\n//     xsrfCookieName : 'csrftoken',\n//     xsrfHeaderName : \"X-CSRFToken\",\n//     withCredentials : true,\n//     timeout : 15000\n// });\naxios.defaults.withCredentials = true;\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.timeout = 25000;\n\nexport default axios;\n","/* eslint-disable no-unused-vars */\nimport axios from \"./axiosFactory\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\"; // you have access to iziToast now\nimport htmx from \"htmx.org/dist/htmx\";\n\nconst exdays = 30 * 24 * 60 * 60;\n\n// function to simulate sleep operation on an event\nfunction sleep(ms) {\n  return new window.Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// function to get cookies name else return an empty string\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\n// function to set a cookie to a value and set an expiry date\nfunction setCookie(cname, cvalue, exdays) {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname +\n    \"=\" +\n    cvalue +\n    \";\" +\n    expires +\n    \";path=/; domain=\" +\n    location.hostname +\n    \"; SameSite=Strict; Secure\";\n}\n\n// function to delete a cookie by its cookie name\nfunction deleteCookie(cname) {\n  const d = new Date();\n  d.setTime(d.getTime() - 365 * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=;\" + expires + \";path=/\";\n}\n\n// get cookie for accepted policies\nconst acceptPrivacyPolicy = getCookie(\"acceptPrivacyPolicy\");\nconst acceptCookiePolicy = getCookie(\"acceptCookiePolicy\");\nconst acceptNecessary = getCookie(\"acceptNecessary\") || true;\nconst acceptAnalytics = getCookie(\"acceptAnalytics\");\nconst acceptGPSPolicy = getCookie(\"acceptGPSPolicy\");\nconst acceptMarketing = getCookie(\"acceptMarketing\");\nconst acceptFunctionality = getCookie(\"acceptFunctionality\");\n\n\n\n\nexport default function Initialize() {\n  return {\n    isInactive: false,\n    active:'all',\n    read:0,\n    open:'all',\n    updateOrCreate: false,\n    processingRequest: false,\n\n    // necessary variables\n    openFloatIcon: false,\n    viewCookiesList: false,\n    closeCookieModal: (\n      acceptPrivacyPolicy &&\n      acceptCookiePolicy &&\n      acceptNecessary &&\n      acceptAnalytics &&\n      acceptGPSPolicy &&\n      acceptMarketing &&\n      acceptFunctionality\n    ),\n    installPrompt: null,\n    deferredPrompt: null,\n    closeInstallPrompt: \"closeInstallPrompt\" in localStorage,\n    showInstallFloatIcon: !(\"showInstallFloatIcon\" in localStorage),\n    fullScreen: false,\n    darkMode: \"darkMode\" in localStorage,\n    shareable: null,\n\n    // detail variables for all detail view request\n    detail: false,\n\n    // navbar variables\n    navbarFixed: false,\n    prevOffset: 0,\n\n    // consent variables\n    acceptNecessary: acceptNecessary,\n    acceptAnalytics: acceptAnalytics,\n    acceptGPS: acceptGPSPolicy,\n    acceptMarketing: acceptMarketing,\n    acceptCookiePolicy: acceptCookiePolicy,\n    acceptPolicy: acceptPrivacyPolicy,\n    acceptFunctionality: acceptFunctionality,\n\n    Init() {\n      // get the response for a page and on get request swap the title for this\n      // and the description meta tag with the detail present here\n      // this.htmxAfterSwab;\n\n      // set an initial state of the header section\n      this.navbarScrollEffect;\n\n      // checking if there is a global store to install a PWA\n      this.installPWASettings;\n\n      // enable sharing by default else disable sharing on initial loading of a web page\n      this.shareableSettings;\n    },\n\n    scrollToElement(id) {\n      document.getElementById(`${id}`).scrollIntoView({behavior: \"smooth\"});\n    },\n\n    htmxAfterSwab() {\n      htmx.on(\"htmx:afterSwap\", function (evt) {\n        console.log(\"htmx oob swab events: \", evt);\n        if (evt.detail.target.id === \"main\") {\n          var title = document.querySelector(\"title\");\n          var author = document.querySelector('meta[name=\"author\"]');\n          var description = document.querySelector('meta[name=\"description\"]');\n\n          if (title) {\n            var newTitle = evt.detail.target.querySelector(\"title\");\n            if (newTitle) {\n              title.textContent = newTitle.textContent;\n            }\n          }\n\n          if (author) {\n            var newAuthor = evt.detail.target.querySelector(\n              'meta[name=\"author\"]'\n            );\n            if (newAuthor) {\n              author.setAttribute(\"content\", newAuthor.getAttribute(\"content\"));\n            }\n          }\n\n          if (description) {\n            var newDescription = evt.detail.target.querySelector(\n              'meta[name=\"description\"]'\n            );\n            if (newDescription) {\n              description.setAttribute(\n                \"content\",\n                newDescription.getAttribute(\"content\")\n              );\n            }\n          }\n\n          var url = evt.detail.xhr.responseURL;\n          if (url) {\n            window.history.pushState(null, \"\", url);\n          }\n        }\n      });\n    },\n\n\n\n    navbarScrollEffect() {\n      const offset = window.pageYOffset;\n      const navbar = document.querySelector(\"#header\");\n      const content = document.querySelector(\"#main\");\n\n      if (offset > 2 && !this.isNavbarFixed) {\n        navbar.classList.remove(\"relative\");\n        navbar.classList.add(\"fixed\");\n        content.style.marginTop = `${navbar.offsetHeight}px`;\n        this.isNavbarFixed = true;\n      }\n\n      if (offset === 0 && this.isNavbarFixed) {\n        navbar.classList.remove(\"fixed\");\n        navbar.classList.add(\"relative\");\n        content.style.marginTop = 0;\n        this.isNavbarFixed = false;\n      }\n\n      if (offset > this.prevOffset && this.isNavbarFixed) {\n        navbar.classList.add(\"hidden\");\n        content.style.marginTop = 0;\n      }\n\n      if (offset < this.prevOffset && this.isNavbarFixed) {\n        navbar.classList.remove(\"hidden\");\n        content.style.marginTop = `${navbar.offsetHeight}px`;\n      }\n\n      this.prevOffset = offset;\n    },\n\n    openDetail(url) {\n      // Whenever a detail page is clicked this fires up to open a modal with details for the item\n      let link = url;\n      htmx.ajax(\"GET\", link, {\n        target: \"#detail\",\n        swap: \"innerHTML\",\n      });\n      this.detail = true;\n    },\n\n    openUpdateCreate(url) {\n      this.updateOrCreate = true;\n      htmx.ajax('GET', url, {\n        target: \"#updateOrCreate\",\n        swap: \"innerHTML\",\n      });\n    },\n\n    shareableSettings() {\n      const acceptSocialSharePolicy = \"acceptSocialSharePolicy\" in localStorage;\n\n      if (this.shareable === null && !acceptSocialSharePolicy) {\n        localStorage.setItem(\"acceptSocialSharePolicy\", \"true\");\n      } else if (this.shareable === false && acceptSocialSharePolicy) {\n        localStorage.removeItem(\"acceptSocialSharePolicy\");\n      } else if (this.shareable === true && acceptSocialSharePolicy) {\n        localStorage.setItem(\"acceptSocialSharePolicy\", \"true\");\n      }\n    },\n\n    async shareURL(url, title) {\n      // share a url using the HTML5 Web APIs\n      if (\"acceptSocialSharePolicy\" in localStorage) {\n        if (title === undefined) {\n          title = document.title;\n        } else {\n          title;\n        }\n\n        const link = `${location.host}${url}`;\n        if (navigator.share) {\n          await navigator\n            .share({\n              title: title,\n              text: `Check out this link from ${\n                location.host\n              }: \\n${title.toUpperCase()}.`,\n              url: link,\n            })\n            .then(\n              async () =>\n                await iziToast.success({\n                  title: \"[SOCIAL SHARE]\",\n                  balloon: true,\n                  position: \"topRight\",\n                  animateInside: true,\n                  message: `Successfully shared: ${title.toUpperCase()}`,\n                })\n            )\n            .catch(\n              async (error) =>\n                await iziToast.error({\n                  title: \"[SOCIAL SHARE ERROR]\",\n                  balloon: true,\n                  position: \"topRight\",\n                  animateInside: true,\n                  message: error.message,\n                })\n            );\n        }\n      } else {\n        return;\n      }\n    },\n\n    enableDarkMode() {\n      // Whenever the user explicitly chooses dark mode\n      localStorage.setItem(\"darkMode\", \"true\");\n      document.documentElement.classList.add(\"dark\");\n      this.darkMode = true;\n    },\n\n    disableDarkMode() {\n      // Whenever the user explicitly chooses light mode\n      localStorage.removeItem(\"darkMode\");\n      document.documentElement.classList.remove(\"dark\");\n      this.darkMode = false;\n    },\n\n    acceptAllPolicies() {\n      setCookie(\"acceptPrivacyPolicy\", true, exdays);\n      setCookie(\"acceptCookiePolicy\", true, exdays);\n      setCookie(\"acceptNecessary\", true, exdays);\n      setCookie(\"acceptAnalytics\", true, exdays);\n      setCookie(\"acceptGPSPolicy\", true, exdays);\n      setCookie(\"acceptMarketing\", true, exdays);\n      setCookie(\"acceptFunctionality\", true, exdays);\n\n      this.closeCookieModal = true;\n    },\n\n    installPWASettings() {\n      let prompt = localStorage.getItem(\"deferredPrompt\");\n      let pwa = JSON.parse(prompt);\n      console.log(pwa);\n      if(pwa === null) {\n        this.closeInstallPrompt = true;\n        this.showInstallFloatIcon = true;\n      }\n    },\n\n    installPWA() {\n      let prompt = localStorage.getItem(\"deferredPrompt\");\n      const pwa = JSON.parse(prompt);\n      // this closes the PWA initial prompt\n      if (pwa) {\n        // open the browser PWA install popup prompt\n        window.deferredPrompt.prompt();\n\n        // inspect what the user chose to do with the install prompt\n        window.deferredPrompt.userChoice.then((choiceResult) => {\n          if (choiceResult.outcome === \"accepted\") {\n            console.log(\"User accepted the install prompt\");\n            this.closeInstallPrompt = true;\n            this.showInstallFloatIcon = false;\n          } else {\n            console.log(\"User dismissed the install prompt\");\n            this.closeInstallPrompt = true;\n            this.showInstallFloatIcon = true;\n          }\n        });\n      }\n\n      // once the app is installed send an alert thanking them and stating the benefits they get using the PWA\n      // listen for the app installed listener to know if the app has been installed\n      //----------------------------------------------------------\n      window.addEventListener(\"appinstalled\", (event) => {\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(\"👍 [PWA INSTALLED STATE]: \", event);\n        }\n\n        this.closeInstallPrompt = true;\n        this.showInstallFloatIcon = false;\n\n        iziToast.info({\n          title: `👍 [PWA INSTALLED]`,\n          balloon: true,\n          position: \"topRight\",\n          animateInside: true,\n          message:\n            \"Thank you for installing the web app. This offers you offline capabilities to use my site when you are out of data.\",\n        });\n      });\n      //----------------------------------------------------------\n    },\n\n    canclePWA() {\n      // localStorage.removeItem(\"beforeinstallprompt\");\n      this.closeInstallPrompt = true;\n      this.showInstallFloatIcon = true;\n    },\n\n    switchFullscreenMode() {\n      this.fullScreen = !this.fullScreen;\n      if (\n        document.fullscreenElement ||\n        document.mozFullScreenElement ||\n        document.msFullScreenElement ||\n        document.webkitFullScreenElement\n      ) {\n        document.exitFullscreen();\n        localStorage.removeItem(\"fullscreen\");\n      } else {\n        document.documentElement.requestFullscreen();\n        localStorage.setItem(\"fullscreen\", \"true\");\n      }\n    },\n  };\n}\n","import axios from \"./axiosFactory\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\"; // you have access to iziToast now\nimport htmx from \"htmx.org/dist/htmx\";\n\nimport Initialize from \"./default\";\n\nconst progressbar = document.getElementById(\"progress\");\nconst prograssAmount = document.getElementById(\"progressLabel\");\n\n// function to simulate sleep operation on an event\nfunction sleep(ms) {\n    return new window.Promise((resolve) => setTimeout(resolve, ms));\n  }\n\nexport default function ProjectProcessing() {\n    return {\n\n        prjectProcessing: false,\n\n        async submitProject() {\n            this.prjectProcessing = true;\n            Initialize.processingRequest = true;\n            progressbar.value = 0;\n            prograssAmount.innerText = '0%';\n\n            const formElement = this.$refs.form;\n            const action = formElement.action;\n            let data = new FormData(formElement);\n\n            await formElement.querySelectorAll(\"[name]\").forEach((fieldElement) => {\n                if(fieldElement.name === \"is_published\") {\n                    if (fieldElement.value === 'on'){\n                        data.append(fieldElement.name, true);\n                    } else {\n                        data.append(fieldElement.name, false);\n                    }\n                } else if (fieldElement.type === \"textarea\") {\n                    let textarea = fieldElement.id;\n                    data.append(\n                      fieldElement.name,\n                      window.parent.tinymce.get(textarea).getContent()\n                    );\n                } else {\n                    data.append(fieldElement.name, fieldElement.value);\n                }\n            });\n\n            console.dir(data);\n\n            await axios.post(action, data)\n            .then((response) => {\n                // const task_id = response.data.task_id;\n                // const cache_key = response.data.cache_key;\n                // const message = response.data.message;\n\n                if (response.status === 201){\n                    iziToast.success({\n                        title: \"PROJECT ADDED\",\n                        message: \"Project Successfully Added\"\n                    });\n                    // this.prjectProcessing = false;\n                    progressbar.value = 100;\n                    prograssAmount.innerText = '100%';\n                    Initialize.processingRequest = false;\n                    // this.checkStatus(task_id, cache_key);\n                }\n            })\n            .catch((error) => {\n                iziToast.error({\n                    title: \"PROJECT UPLOADING FAILED\",\n                    message: error.message\n                });\n                // this.prjectProcessing = false;\n            });\n\n        },\n\n\n        async checkStatus(task_id, cache_key) {\n            await axios.get(`/api/projects/check-processing/${task_id}/${cache_key}/`)\n            .then(async (response) => {\n                if (response.status === 201) {\n                    progressbar.value = 100;\n                    prograssAmount.innerText = '100%';\n                    await sleep(500);\n                    Initialize.processingRequest = false;\n                    iziToast.success({\n                        title: \"PROJECT PROCESSING\",\n                        message: response.data.message\n                    });\n                    await htmx.ajax(\n                        'GET',\n                        `/projects/${response.data.object.slug}/`,\n                        {\n                            target: \"#detail\",\n                            swap: \"innerHTML\",\n                        }\n                    );\n                    Initialize.detail = true;\n                } else {\n                    progressbar.value ++;\n                    prograssAmount.innerText = `${progressbar.value}%`;\n                    this.checkStatus(task_id, cache_key);\n                }\n            })\n            .catch((error) => {\n                Initialize.processingRequest = false;\n                iziToast.error({\n                    title: \"PROJECT PROCESSING FAILED\",\n                    message: error.message\n                });\n                this.prjectProcessing = false;\n            });\n        },\n    };\n}\n","import \"../../sass/project.scss\";\n\n// Select 2\n// import \"select2/dist/css/select2.min.css\";\n// import \"select2/dist/js/select2.min.js\";\n\n// tinymce\nimport tinymce from \"tinymce/tinymce.min.js\";\nimport \"tinymce/icons/default/icons.js\";\nimport \"tinymce/themes/silver/theme.js\";\nimport \"tinymce/skins/content/default/content.min.css\";\nimport \"tinymce/skins/content/default/content.css\";\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/skins/ui/oxide/content.min.css\";\nimport \"tinymce/models/dom/model.js\";\n\n// components\nimport axios from \"../components/axiosFactory\";\nimport Initialize from \"../components/default\";\nimport ProjectProcessing from '../components/projectForm';\n\n// functional imports\nimport { detect } from \"detect-browser\";\nimport Swiper from \"swiper\";\nimport htmx from \"htmx.org/dist/htmx\";\nimport Alpine from \"alpinejs\";\n// import Mask from \"@ryangjchandler/alpine-mask\";\nimport intersect from \"@alpinejs/intersect\";\nimport { ethers } from \"ethers\";\n\n// alert messages\nimport toastr from \"toastr\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\n// import \"flowbite\";\n\nimport anime from \"animejs/lib/anime.es.js\";\nimport ScrollMagic from \"scrollmagic\";\n\nimport lottieweb from \"lottie-web\";\n// import \"@lottiefiles/lottie-player\";\n\n// Global Initializations for importedlibraries //\n//----------------------------------------------------------\n// initialize animejs\nwindow.anime = anime;\nwindow.ScrollMagic = ScrollMagic;\n\n// initialize htmx\nwindow.htmx = htmx;\n// // initialize tinymce\nwindow.tinymce = tinymce;\n// initialize lottie web and lottie player\nwindow.lottieweb = lottieweb;\n\n// initialize ether js for crypto payment\nwindow.ethers = ethers;\n// initialize axios async post|get request\nwindow.axios = axios;\n// initialize swiper.js\nwindow.Swiper = Swiper;\n\n// initiailize izitoast alerts\nwindow.iziToast = iziToast;\n\n// set timeout for inactive user\nlet timer = null;\nfunction resetTimer() {\n  // function to reset the timeout\n  clearTimeout(timer);\n  Alpine.store('isInactive', false);\n  startTimeout;\n}\n\nfunction startTimeout() {\n  // function to start the time out\n  timer = setTimeout(timeout, 1000); // 5 seconds\n}\n\nfunction timeout() {\n  // function to store the boolean for the time out\n  // Set isInactive variable to true\n  Alpine.store('isInactive', true);\n}\n\nstartTimeout();\ndocument.addEventListener('mousemove', resetTimer);\ndocument.addEventListener('keyup', resetTimer);\ndocument.addEventListener('scroll', resetTimer);\n\n// default variables\nconst sw = \"/sw.js\";\nconst home = \"/\";\n\n// detect browser type\nconst browser = detect();\n\n// set service worker link and scope start link\n//----------------------------------------------------------\n\n// get global variables from the base.html file for\n// push notification and pwa install button\n//----------------------------------------------------------\nlet { APPLICATION_SERVER_KEY, CREATE_WP_DEVICE, SEND_NOTIFICATION } =\n  window.WEB_PUSH_CFG;\n\n//----------------------------------------------------------\n\n// generate key for push notifications\n//----------------------------------------------------------\n// https://gist.github.com/Klerith/80abd742d726dd587f4bd5d6a0ab26b6#file-urlbase64touint8array-js\nfunction urlBase64ToUint8Array(base64String) {\n  var padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n\n  var rawData = window.atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\n//----------------------------------------------------------\n// this is to subscribe to push notification from the browser to the server\n//----------------------------------------------------------\nasync function saveSubscribeObj(subscription) {\n  // save subscription to the server\n  const subscriptionJson = subscription.toJSON();\n  const endpointParts = subscriptionJson.endpoint.split(\"/\");\n  const registrationId = endpointParts[endpointParts.length - 1];\n\n  const predata = {\n    status_type: \"subscribe\",\n    subscription: subscriptionJson,\n    browser: browser.name.toLowerCase(),\n    p256dh: subscriptionJson.keys.p256dh,\n    auth: subscriptionJson.keys.auth,\n    user_agent: navigator.getUserAgent,\n    registration_id: registrationId,\n    group: \"users\",\n  };\n\n  const data = JSON.stringify(predata);\n\n  await axios\n    .post(CREATE_WP_DEVICE, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": document.head\n          .querySelector('meta[name=\"csrf-token\"]')\n          .getAttribute(\"content\"),\n      },\n    })\n    .then(function (response) {\n      if (process.env.NODE_ENV === \"development\") {\n        toastr.success({\n          title: \"[PUSH NOTIFICATION SUBSCRIPTION]\",\n          balloon: true,\n          position: \"topRight\",\n          animateInside: true,\n          message: `Subscription Sent Successfully ${response.statusText}`,\n        });\n      }\n\n      const subscribeNotificationButton = document.getElementById(\n        \"subscribeNotificationButton\"\n      );\n      subscribeNotificationButton.classList.toggle(\"hidden\", true);\n      // if subscription is successfully saved to the server\n      // then enable the test notification push button to be visible\n      setupTriggerButton(subscription);\n    })\n    .catch(function (error) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(error);\n        iziToast.error({\n          title: \"[PUSH NOTIFICATION SERVER]\",\n          balloon: true,\n          position: \"topRight\",\n          animateInside: true,\n          message: `Notification Subscription ${error.message}`,\n        });\n      }\n    });\n}\n\n//----------------------------------------------------------\n\n// this function is to send subscription notification to the server\n//----------------------------------------------------------\nasync function subscribe(registration) {\n  await registration.pushManager\n    .getSubscription()\n    .then(function (subscription) {\n      if (subscription) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(\"subscription exists\");\n        }\n\n        saveSubscribeObj(subscription);\n        setupTriggerButton(subscription);\n      }\n    });\n\n  const options = {\n    userVisibleOnly: true, // required by chrome\n    applicationServerKey: urlBase64ToUint8Array(APPLICATION_SERVER_KEY),\n  };\n\n  await registration.pushManager\n    .subscribe(options)\n    .then(\n      // requesting to subscribe from the server\n      function (subscription) {\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(`subscription: `, subscription);\n          console.log(subscription.endpoint);\n        }\n\n        // subscription is now saved to the server\n        saveSubscribeObj(subscription);\n\n        if (process.env.NODE_ENV === \"development\") {\n          iziToast.success({\n            title: \"[PUSH NOTIFICATION SUBSCRIPTION]\",\n            balloon: true,\n            position: \"topRight\",\n            animateInside: true,\n            message: `Subscription Sent Successfully`,\n          });\n        }\n      }\n    )\n    .catch((error) => {\n      // if there is an error figure the error and throw an appropraite error message to\n      // the user so he knows exactly what is wrong and can move forward or adjust for a\n      // device.\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(error);\n        iziToast.error({\n          title: \"[PUSH NOTIFICATION SUBSCRIPTION]\",\n          balloon: true,\n          position: \"topRight\",\n          animateInside: true,\n          message: `${error.message}`,\n        });\n      }\n    });\n}\n\n//----------------------------------------------------------\n\n// The function to trigger the push notification from the browser\n//----------------------------------------------------------\n// subscribe(reg);\nfunction setupSubscribeButton(reg) {\n  if (document.getElementById(\"subscribeNotificationButton\")) {\n    const subscribeNotificationButton = document.getElementById(\n      \"subscribeNotificationButton\"\n    );\n    subscribeNotificationButton.classList.toggle(\"hidden\", false);\n    subscribeNotificationButton.classList.toggle(\"md:hidden\", false);\n    subscribeNotificationButton.addEventListener(\"click\", () => {\n      subscribe(reg);\n      console.log(\"Subscribe Button Set\");\n    });\n  }\n}\n\nfunction disableSubscribeButton() {\n  if (document.getElementById(\"subscribeNotificationButton\")) {\n    const subscribeNotificationButton = document.getElementById(\n      \"subscribeNotificationButton\"\n    );\n    subscribeNotificationButton.classList.toggle(\"hidden\", true);\n    subscribeNotificationButton.classList.toggle(\"md:hidden\", true);\n  }\n}\n\n//----------------------------------------------------------\n// This function is for a user to test the push notification\n//----------------------------------------------------------\nasync function setupTriggerButton(subscription) {\n  const subJson = subscription.toJSON();\n  const endpointParts = subJson.endpoint.split(\"/\");\n  const registrationId = endpointParts[endpointParts.length - 1];\n  const predata = {\n    registration_id: registrationId,\n    auth: subJson.keys.auth,\n    head: \"Jerry Says 🔊 \",\n    body: \"This is how push notifications from my site will be shown on your devices.\",\n  };\n\n  const data = JSON.stringify(predata);\n\n  await axios\n    .post(SEND_NOTIFICATION, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then(async function (response) {\n      await iziToast.info({\n        title: \"[PUSH NOTIFICATION TEST SUCCESSFUL]\",\n        balloon: true,\n        position: \"topRight\",\n        animateInside: true,\n        message: response.data.message,\n      });\n    })\n    .catch(async function (error) {\n        await iziToast.error({\n        title: \"[PUSH NOTIFICATION TEST ERROR]\",\n        balloon: true,\n        position: \"topRight\",\n        animateInside: true,\n        message: error.response.data.detail,\n    });\n    });\n}\n\n//----------------------------------------------------------\n// End push notification button\n//----------------------------------------------------------\n\n// enable service worker, then when service worker is enabled request\n// permission for push notification and location services from the browser\n//----------------------------------------------------------\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker\n      .register(sw, { scope: home })\n      .then((registration) => {\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(\"Service worker registeration succeeded: \", registration);\n        }\n\n        navigator.serviceWorker.ready.then(function async(registration) {\n          initialiseState(registration);\n          if (registration.installing) {\n            console.log(\"Service worker installing\");\n          } else if (registration.waiting) {\n            console.log(\"Service worker installed\");\n          } else if (registration.active) {\n            console.log(\"Service worker active\");\n          }\n        });\n      })\n      .catch((err) => {\n        if (process.env.NODE_ENV === \"development\") {\n          iziToast.error({\n            title: \"[SERVICE WORKER]\",\n            balloon: true,\n            position: \"topRight\",\n            animateInside: true,\n            message: \"Service Worker Failed to Register\",\n          });\n          console.log(err);\n        }\n      });\n  });\n}\n\nconst initialiseState = (reg) => {\n  if (!reg.showNotification) {\n    iziToast.error({\n      title: \"[PUSH NOTIFICATION UNSUPPORTED]\",\n      balloon: true,\n      position: \"topRight\",\n      animateInside: true,\n      message: \"Showing <strong>PUSH NOTIFICATIONS</strong> is unsupported\",\n    });\n    return;\n  } else if (reg.showNotification) {\n    disableSubscribeButton();\n  }\n\n  if (Notification.permission === \"denied\") {\n    iziToast.warning({\n      title: \"[PUSH NOTIFICATION DENIED]\",\n      balloon: true,\n      position: \"topRight\",\n      animateInside: true,\n      message:\n        \"You prevented us from shwoing notifications. Manually check if you have prevented push notifcation from us.\",\n    });\n    return;\n  } else if (Notification.permission !== \"denied\") {\n    disableSubscribeButton();\n  }\n\n  if (!(\"PushManager\" in window)) {\n    iziToast.info({\n      title: \"[PUSH BNOTIFICATION UNAVAILBALE]\",\n      balloon: true,\n      position: \"topRight\",\n      animateInside: true,\n      message: \"Push notification is not allowed in your browser.\",\n    });\n    return;\n  } else if (\"PushManager\" in window) {\n    disableSubscribeButton();\n  }\n\n  reg.pushManager.getSubscription().then((sub) => {\n    console.log(\"Registration Object\", reg);\n    if (!sub || sub === null) {\n      setupSubscribeButton(reg);\n    } else if (sub !== null || sub) {\n      console.log(\"Subscribe Already Done\");\n      // setupTriggerButton(sub);\n      disableSubscribeButton();\n    }\n  });\n};\n\n// Alpine JS Scripts\nAlpine.plugin(intersect);\n// Alpine.plugin(Mask);\n\nwindow.Alpine = Alpine;\n// Alpine.data(\"SignupForm\", SignupForm);\n// Alpine.data(\"ConfirmEmailForm\", ConfirmEmailForm);\n// Alpine.data(\"LoginForm\", LoginForm);\n// Alpine.data(\"PChangeForm\", PChangeForm);\n// Alpine.data(\"ResetPasswordForm\", ResetPasswordForm);\n// Alpine.data(\"SubscriptionForm\", SubscriptionForm);\n// Alpine.data(\"Google\", Google);\nAlpine.data(\"Default\", Initialize);\nAlpine.data(\"Project\", ProjectProcessing);\n// Alpine.data(\"UserDetail\", UserDetail);\n// Alpine.data('ContactForm', ContactForm),\n// Alpine.data('StickyNav', StickyNav);\n// Alpine.data('ChartJs', ChartJs);\nAlpine.start();\n//----------------------------------------------------------\n\n// -----------------------------------------------------------------\n// TRIGGER INSTALL BUTTON FOR PROGRESSIVE WEB APPLICATION\n// ------------------------------------------------------------------\n// check if the PWA is already installed or not\n//----------------------------------------------------------\nif (window.matchMedia(\"(display-mode: standalone)\").matches) {\n  console.log(\"PWA is already installed\");\n  localStorage.removeItem(\"deferredPrompt\");\n} else {\n  console.log(\"PWA is not installed\");\n  window.addEventListener(\"beforeinstallprompt\", (event) => {\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\"👍[PWA]\", \"beforeinstallprompt\", JSON.stringify(event));\n    }\n\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    event.preventDefault();\n\n    if (event) {\n      // Stash the event so it can be triggered later.\n      localStorage.setItem(\"deferredPrompt\", JSON.stringify(event));\n      window.deferredPrompt = event;\n    } else {\n      if (!(\"deferredPrompt\" in localStorage)) {\n        self.closeInstallPrompt = true;\n        self.showInstallFloatIcon = true;\n      }\n    }\n  });\n}\n\n// load static script files after htmx loads\n//----------------------------------------------------------\n\n[\n  // \"htmx:onLoad\",\n  // \"htmx:load\",\n  // \"htmx:afterSettle\",\n  \"htmx:afterSwap\",\n  // \"htmx:afterOnLoad\",\n].forEach((evt) => {\n  window.addEventListener(evt, function () {\n    window.anime = anime;\n    window.scrollMagic = ScrollMagic;\n    window.iziToast = iziToast;\n    // // initialize tinymce\n    window.tinymce = tinymce;\n    // initialize lottie web and lottie player\n    window.lottieweb = lottieweb;\n\n    // initialize ether js for crypto payment\n    window.ethers = ethers;\n    // initialize axios async post|get request\n    window.axios = axios;\n    // initialize swiper.js\n    window.Swiper = Swiper;\n    // initiailize izitoast alerts\n\n    const counters = document.querySelectorAll(\".counter\");\n    const car = document.getElementById(\"car\");\n\n    const controller = new ScrollMagic.Controller();\n\n    // if(document.getElementById('const')){\n    //   lottieweb.loadAnimation({\n    //     container: document.getElementById('const'),\n    //     path: \"/static/vendors/images/lottie/under-construction.json\",\n    //     renderer: 'svg',\n    //     loop: true,\n    //     autoPlay: true,\n    //     name: 'Under Construction'\n    //   });\n    // }\n\n    function startCounting() {\n      if (counters) {\n        counters.forEach((counter) => {\n          anime({\n            targets: counter,\n            innerHTML: [0, counter.getAttribute(\"data-count\")],\n            easing: \"easeInOutSine\",\n            round: 1,\n            duration: 4000,\n          });\n        });\n      }\n    }\n\n    function animateHows() {\n      if (document.querySelectorAll(\".how\")) {\n        anime({\n          targets: \".how\",\n          translateX: 56,\n          easing: \"easeInOutSine\",\n          duration: 800,\n          opacity: 1,\n          delay: anime.stagger(200, { start: 500 }),\n        });\n      }\n    }\n\n    if (document.getElementById(\"countTrigger\")) {\n      new ScrollMagic.Scene({\n        triggerElement: \"#countTrigger\",\n        triggerHook: \"onEnter\",\n        duration: \"100%\",\n        reverse: false,\n        offset: 50,\n      })\n        .on(\"enter\", function () {\n          startCounting();\n        })\n        .addTo(controller);\n    }\n\n    if (document.getElementById(\"track\")) {\n      new ScrollMagic.Scene({\n        triggerElement: \"#track\",\n        triggerHook: \"onEnter\",\n        duration: \"100%\",\n        reverse: true,\n        offset: 50,\n      })\n        .on(\"enter\", function () {\n          carDrive();\n        })\n        .addTo(controller);\n    }\n\n    if (document.getElementById(\"hows\")) {\n      new ScrollMagic.Scene({\n        triggerElement: \"#hows\",\n        triggerHook: \"onEnter\",\n        duration: \"100%\",\n        reverse: false,\n        offset: 100,\n      })\n        .on(\"enter\", function () {\n          animateHows();\n        })\n        .addTo(controller);\n    }\n\n    if (document.querySelectorAll(\".intro\")) {\n      anime({\n        targets: \".intro\",\n        translateX: -56,\n        easing: \"easeInOutSine\",\n        duration: 800,\n        opacity: 1,\n        delay: anime.stagger(200, { start: 500 }),\n      });\n    }\n\n    function carDrive() {\n      if (car) {\n        anime({\n          targets: \"#car\",\n          translateX: {\n            value: \"-100vw\",\n            duration: 5000,\n          },\n          easing: \"easeInOutSine\",\n          opacity: 1,\n          delay: anime.stagger(200, { start: 500 }),\n          direction: \"normal\",\n          loop: false,\n        });\n      }\n    }\n  });\n});\n"],"names":["axios","exdays","getCookie","cname","name","ca","document","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","cvalue","d","Date","setTime","getTime","expires","toUTCString","location","hostname","acceptPrivacyPolicy","acceptCookiePolicy","acceptNecessary","acceptAnalytics","acceptGPSPolicy","acceptMarketing","acceptFunctionality","Initialize","isInactive","active","read","open","updateOrCreate","processingRequest","openFloatIcon","viewCookiesList","closeCookieModal","installPrompt","deferredPrompt","closeInstallPrompt","localStorage","showInstallFloatIcon","fullScreen","darkMode","shareable","detail","navbarFixed","prevOffset","acceptGPS","acceptPolicy","Init","this","navbarScrollEffect","installPWASettings","shareableSettings","scrollToElement","id","getElementById","scrollIntoView","behavior","htmxAfterSwab","htmx","evt","console","log","target","title","querySelector","author","description","newTitle","textContent","newAuthor","setAttribute","getAttribute","newDescription","url","xhr","responseURL","window","history","pushState","offset","pageYOffset","navbar","content","isNavbarFixed","classList","remove","add","style","marginTop","offsetHeight","openDetail","link","swap","openUpdateCreate","acceptSocialSharePolicy","removeItem","setItem","async","undefined","host","navigator","share","text","toUpperCase","then","iziToast","balloon","position","animateInside","message","catch","error","enableDarkMode","documentElement","disableDarkMode","acceptAllPolicies","prompt","getItem","pwa","JSON","parse","installPWA","userChoice","choiceResult","outcome","addEventListener","event","canclePWA","switchFullscreenMode","fullscreenElement","mozFullScreenElement","msFullScreenElement","webkitFullScreenElement","exitFullscreen","requestFullscreen","progressbar","prograssAmount","anime","ScrollMagic","tinymce","lottieweb","ethers","Swiper","timer","resetTimer","clearTimeout","Alpine","timeout","setTimeout","browser","detect","APPLICATION_SERVER_KEY","CREATE_WP_DEVICE","SEND_NOTIFICATION","WEB_PUSH_CFG","urlBase64ToUint8Array","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","charCodeAt","saveSubscribeObj","subscription","subscriptionJson","toJSON","endpointParts","endpoint","registrationId","predata","status_type","toLowerCase","p256dh","keys","auth","user_agent","getUserAgent","registration_id","group","data","stringify","headers","head","response","toggle","setupTriggerButton","disableSubscribeButton","subscribeNotificationButton","subJson","body","serviceWorker","register","scope","registration","ready","initialiseState","installing","waiting","err","reg","showNotification","Notification","permission","pushManager","getSubscription","sub","options","userVisibleOnly","applicationServerKey","subscribe","setupSubscribeButton","intersect","prjectProcessing","value","innerText","formElement","$refs","form","action","FormData","querySelectorAll","forEach","fieldElement","append","type","textarea","parent","get","getContent","dir","status","task_id","cache_key","Promise","resolve","object","slug","checkStatus","matchMedia","matches","preventDefault","self","scrollMagic","counters","car","controller","triggerElement","triggerHook","duration","reverse","on","counter","targets","innerHTML","easing","round","addTo","translateX","opacity","delay","start","direction","loop"],"sourceRoot":""}